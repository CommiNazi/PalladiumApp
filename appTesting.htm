<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href= "http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css">
<link rel="stylesheet" href="main.css">
<script src="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script type="javascript" src="https://s3.amazonaws.com/jakellat/episodes/InvocationList.js"></script>
<script type="javascript" src="invocations.json"></script>
<title></title>
</head>
<body>
<p>Spells:</p>
<p id="invocations"></p>
<script>
var InvocationList
$(document).ready(function(){
  var invoLength, text, clicktracker
  $.getJSON("https://s3.amazonaws.com/jakellat/episodes/invocations.json?&callback=InvocationList", function(data){
    InvocationList = data;
    invoLength = InvocationList.length;
    text = "<ul>";
    for (var i = 0; i < invoLength; i++) { // loops through the array to show all of the entries in a list
        text += "<li class='spell' id='spell-"+i+"'>" + invocationInfo(InvocationList[i]) + "<\/li>";
    }
    text += "<\/ul>";
    document.getElementById("invocations").innerHTML = text; // pulls the info from the object and displays it on the page
    $(".spell").on("click",function(e){ // lets us know if the description should be shown or hidden, based on the presence of clicktracker id
        var writeDetails =  function(obj){ //quick routine for adding a sliding div to the page with details specific to the spell header clicked
              clicktracker = obj.id; //set the clicktracker to this id, since it's being opened right now.
              var details=getDetails(InvocationList[obj.id.substr(obj.id.indexOf("-")+1)]); //pull the details from the JSON
              var el = document.createElement("DIV");
              $(el).html(details);
              el.className = "blah"; //used througout to use as a jQuery selector to target the details tab.
              $(obj).append(el);
              $(el).hide().slideToggle('slow');
            }
        if( e.target != this ) return false; //prevents the details from disappearing if you click on the detail text. Basically allowing for copy/pasting details
        if($(".blah").length){ //check if a details tab is already open
          $(".blah").slideToggle('slow', function(){$(this).remove();}); //slide the details closed, and delete it entirely.
          if(this.id == clicktracker) { //check to see if we clicked on the same header that was open already. That will just close it, without opening a new one.
            return;
          } else {
            writeDetails(this); //slide out the details tab
          }
        } else {
          writeDetails(this); //slide out the details tab
      }
    });
  }).fail(function( jqxhr, textStatus, error ) {
    var err = textStatus + ", " + error;
    console.log( "Request Failed: " + err );
});
function invocationInfo(object) { // this creates the full list of spell names, PPE cost, and usage icons
  var fin = object.invocationName + " (" + object.cost + ")";
  for(var x=0;x<object.usage.length;x++) {
    var img = document.createElement("IMG");
    img.src = object.usage[x];
    fin += img.outerHTML;
  }
  return fin; 
}
function getDetails(id) { //this takes in a
        var table = document.createElement("TABLE");
        var arr = new Array();
        arr.push("<tr><td class='label'>Level:<\/td><td>" + id.level + "<td><\/tr>");
        arr.push("<tr><td class='label'>Range:<\/td><td>" + id.range + "<td><\/tr>");
        arr.push("<tr><td class='label'>Duration:<\/td><td>" + id.duration + "<td><\/tr>");
        arr.push("<tr><td class='label'>Source:<\/td><td>" + id.source + " pg." + id.page + "<td><\/tr>");
        arr.push("<tr><td class='label'>Save:<\/td><td>" + id.save + "<td><\/tr>");
        arr.push("<tr><td colspan=3><b>Description: <\/b>" + id.description + "<\/td><\/tr>");
        for(var y=0;y<arr.length;y++) {
          var stuff = $.parseHTML(arr[y]);
          $(table).append(stuff);
        }
        return table;
}
});
</script>
</body>
</html>
